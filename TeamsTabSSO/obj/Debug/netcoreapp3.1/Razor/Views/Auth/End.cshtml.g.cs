#pragma checksum "C:\Users\t-arielfu\Projects\binglite\Microsoft-Teams-Samples\samples\tab-sso\csharp\TeamsTabSSO\Views\Auth\End.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a8e9f7a23d18d6f841daa2c30cd10a0f86773bf8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Auth_End), @"mvc.1.0.view", @"/Views/Auth/End.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\t-arielfu\Projects\binglite\Microsoft-Teams-Samples\samples\tab-sso\csharp\TeamsTabSSO\Views\_ViewImports.cshtml"
using TeamsAuthSSO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\t-arielfu\Projects\binglite\Microsoft-Teams-Samples\samples\tab-sso\csharp\TeamsTabSSO\Views\_ViewImports.cshtml"
using TeamsAuthSSO.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8e9f7a23d18d6f841daa2c30cd10a0f86773bf8", @"/Views/Auth/End.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b5e871ff40c6a7b09ab0662a86a1f9bb14e95556", @"/Views/_ViewImports.cshtml")]
    public class Views_Auth_End : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<object>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\t-arielfu\Projects\binglite\Microsoft-Teams-Samples\samples\tab-sso\csharp\TeamsTabSSO\Views\Auth\End.cshtml"
   ViewBag.Title = "title";
                Layout = "_Layout"; 

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        microsoftTeams.initialize();
        localStorage.removeItem(""simple.error"");
        let hashParams = getHashParameters();
        if (hashParams[""error""]) {
            // Authentication/authorization failed
            localStorage.setItem(""simple.error"", JSON.stringify(hashParams));
            microsoftTeams.authentication.notifyFailure(hashParams[""error""]);
        } else if (hashParams[""access_token""]) {
            // Get the stored state parameter and compare with incoming state
            let expectedState = localStorage.getItem(""simple.state"");
            if (expectedState !== hashParams[""state""]) {
                // State does not match, report error
                localStorage.setItem(""simple.error"", JSON.stringify(hashParams));
                microsoftTeams.authentication.notifyFailure(""StateDoesNotMatch"");
            } else {
                // Success -- return token information to the parent page
                microsoftTea");
                WriteLiteral(@"ms.authentication.notifySuccess({
                    idToken: hashParams[""id_token""],
                    accessToken: hashParams[""access_token""],
                    tokenType: hashParams[""token_type""],
                    expiresIn: hashParams[""expires_in""]
                });
            }
        } else {
            // Unexpected condition: hash does not contain error or access_token parameter
            localStorage.setItem(""simple.error"", JSON.stringify(hashParams));
            microsoftTeams.authentication.notifyFailure(""UnexpectedFailure"");
        }
        // Parse hash parameters into key-value pairs
        function getHashParameters() {
            let hashParams = {};
            location.hash.substr(1).split(""&"").forEach(function (item) {
                let s = item.split(""=""),
                    k = s[0],
                    v = s[1] && decodeURIComponent(s[1]);
                hashParams[k] = v;
            });
            return hashParams;
        }
    </script");
                WriteLiteral(">\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<object> Html { get; private set; }
    }
}
#pragma warning restore 1591
